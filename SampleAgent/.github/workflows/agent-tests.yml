# .github/workflows/agent-tests.yml
name: Weather Agent Tests
on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov responses
    
    - name: Run tests
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        BRAVE_API_KEY: ${{ secrets.BRAVE_API_KEY }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
      run: |
        pytest tests/ --cov=. --cov-report=xml -v
    
    - name: Run agent evaluation
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        BRAVE_API_KEY: ${{ secrets.BRAVE_API_KEY }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
      run: |
        python -m agent_eval.evaluator
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          agent_eval/latest_report.json
          .coverage
          coverage.xml
      if: always()

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install linting tools
      run: |
        pip install flake8 black mypy
    
    - name: Run linters
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        black . --check
        mypy .
  
  integration:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run integration tests
      env:
        WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        BRAVE_API_KEY: ${{ secrets.BRAVE_API_KEY }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
      run: |
        pytest tests/ -v -m "integration"
    
    - name: Generate integration report
      run: |
        python -m agent_eval.evaluator --mode=integration
      
    - name: Archive integration results
      uses: actions/upload-artifact@v3
      with:
        name: integration-results
        path: agent_eval/latest_report.json